name: CI/CD Workflow

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4.2.2

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20.17'

      - name: Install dependencies
        run: npm install

      - name: Copy .env.test to .env
        run: cp .env.test .env

      - name: Run Unit Tests
        run: npm test

      - name: Set up Docker Compose for integration tests
        run: docker compose -f docker-compose.test.yml up -d

      - name: Wait for database to be ready
        run: |
          echo "Waiting for the database to be ready..."
          for i in {1..10}; do
            if pg_isready -h localhost -p 5433 -U postgres; then
              echo "Database is ready!" 
              break
            fi
            echo "Database is not ready yet... retrying in 2s"
            sleep 2
            if [ $i -eq 10 ]; then
              echo "Error: Database not ready after 10 attempts"
              exit 1
            fi
          done

      - name: Apply Prisma Migrations
        run: |
          echo "Applying Prisma migrations..."
          npx prisma migrate deploy

      - name: Run integration tests
        run: npx jest --config jest.integration.config.js

      - name: Get Docker Compose Logs (on failure)
        if: failure()
        run: docker compose -f docker-compose.test.yml logs

      - name: Tear down Docker Compose
        if: always()
        run: docker compose -f docker-compose.test.yml down

  build:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20.17'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build